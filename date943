#include "std_lib_facilities.h"

class Date {
	int year, month, day;					
public:									//csak ezen keresztül tudunk értéket mód.
	Date(int y, int m, int d);				
	void add_day(int n);
	int get_year() { return year; }
	int get_month() { return month; }
	int get_day() { return day; }
};

Date::Date(int y, int m, int d)				
{
	if (y > 0)
		year = y;					
	else
		error("Invalid year");
	if (m <= 12 && m > 0)
		month = m;	
	else				
		error("Invalid month");
	if (d > 0 && d <=31)
		day = d;
	else
		error("Invalid day");
}

void Date::add_day(int n)
{
	day += n;
	if (day > 31)
	{
		month++;					//hónap léptetése
		day -= 31;				//napból kivonjuk a hónapot
		if (month > 12)
		{
			year++;
			month -= 12;
		}
	}
}

ostream& operator<<(ostream& os, const Date& d)
{
	return os << '(' << d.year()
				<< ',' << d.month()
				<< ',' << d.day() << ')';
}

int main()
try {
	
	Date today {1978, 6, 25};	

	Date tomorrow = today;			

	tomorrow.add_day(1);			//1 napot léptetünk

	cout << "Today: " << today << endl;
	cout << "tomorrow: " << tomorrow << endl;


	return 0;

} catch (exception& e) {
	cout << e.what() << endl;
	return 1;
}
